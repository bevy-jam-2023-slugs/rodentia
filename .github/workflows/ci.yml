name: CI

on:
  pull_request:
    types: [ labeled, opened, synchronize, reopened ]
env:
  CARGO_TERM_COLOR: always
  NIGHTLY_TOOLCHAIN: nightly-2023-05-19
  # Sparse cargo registry for faster updates
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  test-native:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run cargo test for native-dev
        run: cargo test

  test-wasm:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    if: contains(github.event.pull_request.labels.*.name, 'wasm') # Gated because building Wasm clears the `target` dir, invalidating the cache and causing builds to take > 30 mins :(
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev
      - name: Install trunk
        uses: jetli/trunk-action@v0.1.0
        with:
          version: "v0.16.0"
      - name: Add wasm target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm
        run: trunk build --no-default-features --features wasm_dev

  lint:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Run clippy with native dev features
        run: cargo clippy
